/// <reference types="figma" />
/**
 * Wraps around a Figma DocumentNode to use in the cloud and plugin
 */
export default class FigmaDocumentParser {
    private document?;
    constructor(document?: DocumentNode | undefined);
    getId(): string;
    setDocumentNode(document: DocumentNode): void;
    protected getDocumentNode(): DocumentNode | undefined;
    getAllPages(): PageNode[];
    /**
     * Runs and returns an array of matching nodes that pass the match function
     * @param node - Can pass any Figma Node with children
     * @param matchFunction
     * @returns
     */
    static FindAll(node: SceneNode | any, matchFunction: (child: SceneNode) => boolean): SceneNode[];
    getPageNode(pageId: string): PageNode;
    /**
     * Looks in immediate children if there are any matches
     * @param node
     * @param matchFunction
     * @returns
     */
    static FindChildren(node: SceneNode | any, matchFunction: (child: SceneNode) => boolean): SceneNode[];
    static RemoveNode(root: BaseNode, nodeId: string): void;
    findAll: typeof FigmaDocumentParser.FindAll;
    findChildren: typeof FigmaDocumentParser.FindChildren;
}
