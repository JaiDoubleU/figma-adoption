{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import cTable from 'console.table';\nimport { FigmaCalculator } from \"figma-calculations\";\n\nconst figmaCalculator = new FigmaCalculator();\n\n\n// this is the API token for Figma\nconst API_TOKEN = '294730-0ad632d6-1f96-4bcc-b6e7-92d1d5d9b7e2'\n//process.env['Figma-API-Token']\n\n\n// these are the Figma Team IDs to retrieve\n//https://www.figma.com/files/File_ID/team/Team_ID\n// https://www.figma.com/files/1085986286497345294/team/870439247237197912\n// https://www.figma.com/files/1085986286497345294/team/870439247237197912\nconst FIGMA_TEAM_IDS = [\n  \"870439247237197912\"\n]\n\n// this is the team id that publishes all of your designs. We'll use the styles from here to check for linting\nconst FIGMA_STYLE_TEAM_ID = \"870439247237197912\"\n\nconst startProcessing = async () => {\n\n  figmaCalculator.setAPIToken(API_TOKEN)\n\n  console.log('Fetching File Ids...')\n  // fetch all of the files edited in last two weeks\n  // note: may take some time\n  const { files } = await\n    figmaCalculator.getFilesForTeams(FIGMA_TEAM_IDS, 2, true)\n\n  console.log('Fetching Styles...')\n  // load up any style libraries\n  await figmaCalculator.loadComponents(FIGMA_STYLE_TEAM_ID);\n  await figmaCalculator.loadStyles(FIGMA_STYLE_TEAM_ID);\n\n  const allPages = [];\n\n  if (files.length === 0) {\n    console.error(\"No Files Ids Retrieved.. Exiting\")\n    return;\n  }\n  console.log(\"Iterating over \" + files.length + \" files...\")\n\n  for (let i = 0; i < files.length; i++) {\n    const file = files[i];\n\n    // you can further optimize by tossing out certain file names\n    console.log('Processing file name: ' +file.name);\n    try {\n      await figmaCalculator.fetchCloudDocument(file.key);\n    } catch (ex) {\n      console.error(`Failed to fetch ${file.key}`);\n      continue;\n    }\n\n    console.log(`Processing file of ${i + 1} of ${files.length}`);\n\n    // run through all of the pages and process them\n    for (const page of figmaCalculator.getAllPages()) {\n      const processedNodes = figmaCalculator.processTree(page);\n\n      const pageDetails = {\n        file,\n        pageAggregates: processedNodes.aggregateCounts,\n        pageName: page.name,\n      };\n      allPages.push(pageDetails);\n    }\n  }\n\n  const teamBreakdown = figmaCalculator.getBreakDownByTeams(allPages);\n\n  printTeamTable(teamBreakdown)\n\n}\n\nstartProcessing();\n\n\nfunction printTeamTable(teamBreakdown: any) {\n  const { totals: { adoptionPercent, lintPercentages }, teams } = teamBreakdown;\n\n\n  console.log(\"Your Figma Stats\")\n  console.log(\"------------------------------------\")\n  console.log(`Component Adoption: ${adoptionPercent}%`)\n  console.log(`Text Style Full Match: ${lintPercentages['Text-Style'].full}`)\n  console.log(`Fill Style Full Match: ${lintPercentages['Fill-Style'].full}`)\n\n  const flatTeams = [];\n  for (const teamName of Object.keys(teams)) {\n    const { adoptionPercent, lintPercentages } = teams[teamName];\n    flatTeams.push({\n      teamName,\n      adoptionPercent,\n      fillMatch: lintPercentages['Fill-Style'].full,\n      textMatch: lintPercentages['Text-Style'].full,\n    })\n  }\n  console.table(flatTeams)\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AACA,gCAAgC;AAEhC,MAAM,kBAAkB,IAAI;AAI5B,MAAM,YAAY;AAQlB,MAAM,iBAAiB;AAAA,EACrB;AAAA;AAIF,MAAM,sBAAsB;AAE5B,MAAM,kBAAkB,YAAY;AAElC,kBAAgB,YAAY;AAE5B,UAAQ,IAAI;AAGZ,QAAM,EAAE,UAAU,MAChB,gBAAgB,iBAAiB,gBAAgB,GAAG;AAEtD,UAAQ,IAAI;AAEZ,QAAM,gBAAgB,eAAe;AACrC,QAAM,gBAAgB,WAAW;AAEjC,QAAM,WAAW;AAEjB,MAAI,MAAM,WAAW,GAAG;AACtB,YAAQ,MAAM;AACd;AAAA;AAEF,UAAQ,IAAI,oBAAoB,MAAM,SAAS;AAE/C,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,UAAM,OAAO,MAAM;AAGnB,YAAQ,IAAI,2BAA0B,KAAK;AAC3C,QAAI;AACF,YAAM,gBAAgB,mBAAmB,KAAK;AAAA,aACvC,IAAP;AACA,cAAQ,MAAM,mBAAmB,KAAK;AACtC;AAAA;AAGF,YAAQ,IAAI,sBAAsB,IAAI,QAAQ,MAAM;AAGpD,eAAW,QAAQ,gBAAgB,eAAe;AAChD,YAAM,iBAAiB,gBAAgB,YAAY;AAEnD,YAAM,cAAc;AAAA,QAClB;AAAA,QACA,gBAAgB,eAAe;AAAA,QAC/B,UAAU,KAAK;AAAA;AAEjB,eAAS,KAAK;AAAA;AAAA;AAIlB,QAAM,gBAAgB,gBAAgB,oBAAoB;AAE1D,iBAAe;AAAA;AAIjB;AAGA,wBAAwB,eAAoB;AAC1C,QAAM,EAAE,QAAQ,EAAE,iBAAiB,mBAAmB,UAAU;AAGhE,UAAQ,IAAI;AACZ,UAAQ,IAAI;AACZ,UAAQ,IAAI,uBAAuB;AACnC,UAAQ,IAAI,0BAA0B,gBAAgB,cAAc;AACpE,UAAQ,IAAI,0BAA0B,gBAAgB,cAAc;AAEpE,QAAM,YAAY;AAClB,aAAW,YAAY,OAAO,KAAK,QAAQ;AACzC,UAAM,EAAE,mCAAiB,sCAAoB,MAAM;AACnD,cAAU,KAAK;AAAA,MACb;AAAA,MACA;AAAA,MACA,WAAW,iBAAgB,cAAc;AAAA,MACzC,WAAW,iBAAgB,cAAc;AAAA;AAAA;AAG7C,UAAQ,MAAM;AAAA;",
  "names": []
}
